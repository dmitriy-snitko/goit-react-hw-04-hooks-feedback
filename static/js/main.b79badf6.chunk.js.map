{"version":3,"sources":["App.styles.jsx","components/Section/Section.styles.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.styles.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styles.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.styles.jsx","components/Notification/Notification.jsx","App.jsx","index.js"],"names":["Container","styled","div","FeedbackContainer","Wrapper","Title","h2","Section","children","title","BtnContainer","Button","button","FeedbackOptions","options","onLeaveFeedback","optionsKeys","Object","keys","map","key","onClick","List","ul","Item","li","Text","p","Statistics","total","positivePercentage","state","stateKeys","Message","Notification","message","App","useState","good","setGood","neutral","setNeutral","bad","setBad","countTotalFeedback","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAEaA,EAAYC,IAAOC,IAAV,6GAMTC,EAAoBF,IAAOC,IAAV,wICNjBE,EAAUH,IAAOC,IAAV,yNAaPG,EAAQJ,IAAOK,GAAV,0N,OCEHC,EAdC,SAAC,GAAuC,IAAD,IAApCC,gBAAoC,MAAzB,wBAAyB,EAAZC,EAAY,EAAZA,MACzC,OACE,eAACL,EAAD,WACE,cAACC,EAAD,UAAQI,IACPD,MCLME,EAAeT,IAAOC,IAAV,yIAQZS,EAASV,IAAOW,OAAV,0RCeJC,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAcC,OAAOC,KAAKJ,GAChC,OACE,cAACJ,EAAD,UACGM,EAAYG,KAAI,SAAAC,GAAG,OAClB,cAACT,EAAD,CAEEU,QAAS,kBAAMN,EAAgBK,IAFjC,SAIGA,GAHIA,SCRFE,EAAOrB,IAAOsB,GAAV,wHAOJC,EAAOvB,IAAOwB,GAAV,6IAUJC,EAAOzB,IAAO0B,EAAV,0BCaFC,EA7BI,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,mBAAoBC,EAAY,EAAZA,MACzCC,EAAYf,OAAOC,KAAKa,GAE9B,OACE,eAACT,EAAD,WACGU,EAAUb,KAAI,SAAAC,GACb,OACE,cAACI,EAAD,UACE,eAACE,EAAD,WAAON,EAAP,KAAcW,EAAMX,OADXA,EAAMW,EAAMX,OAM3B,cAACI,EAAD,UACE,eAACE,EAAD,qBAAcG,OAEhB,cAACL,EAAD,UACE,eAACE,EAAD,iCAA0BI,EAA1B,aClBKG,EAAUhC,IAAO0B,EAAV,0BCMLO,EALM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,cAACF,EAAD,UAAUE,KCoDjCC,MAhDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAEMC,EAAqB,kBAAMN,EAAOE,EAAUE,GAoBlD,OACE,cAAC1C,EAAD,UACE,eAACG,EAAD,WACE,cAAC,EAAD,CAASM,MAAM,wBAAf,SACE,cAAC,EAAD,CACEK,QAAS,CAAEwB,OAAME,UAASE,OAC1B3B,gBArBc,SAACK,GACvB,OAAQA,GACN,IAAK,OACHmB,GAAQ,SAAAM,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHJ,GAAW,SAAAI,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHF,GAAO,SAAAE,GAAS,OAAIA,EAAY,KAChC,MACF,QAAS,aAYP,cAAC,EAAD,CAASpC,MAAM,aAAf,SACGmC,IACC,cAAC,EAAD,CACEb,MAAO,CAAEO,OAAME,UAASE,OACxBb,MAAOe,IACPd,mBA9BVgB,KAAKC,MAAa,IAAPT,EAAaM,OAgChB,cAAC,EAAD,CAAcT,QAAQ,8BCzClCa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b79badf6.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  height: 100vh;\n  padding: 20px;\n\n  background-color: var(--main-bg-color);\n`\nexport const FeedbackContainer = styled.div`\n  display: grid;\n  grid-template-rows: repeat(2 1fr);\n  gap: 25px;\n\n  width: 700px;\n  margin: 0 auto;\n`","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  text-align: center;\n\n  padding-bottom: 10px;\n\n  border-radius: 15px;\n  overflow: hidden;\n\n  background-color: var(--white-color);\n\n  box-shadow: 0 0.5rem 1rem rgb(0 0 0 / 15%);\n`\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n  padding: 15px;\n\n  text-transform: uppercase;\n\n  font-size: 16px;\n  font-weight: 400;\n\n  color: #343a40;\n\n  box-shadow: 0 0.125rem 0.25rem rgb(0 0 0 / 8%)\n`","import { Wrapper, Title } from \"./Section.styles\";\nimport PropTypes from 'prop-types';\n\nconst Section = ({ children = <div></div>, title }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n}\n\nexport default Section;","import styled from \"@emotion/styled\";\n\nexport const BtnContainer = styled.div`\nwidth: 100%;\njustify-content: center;\ndisplay: grid;\ngrid-template-columns: repeat(3, 80px);\ngap: 10px;\n`\n\nexport const Button = styled.button`\npadding: 5px;\nborder: 1px solid #ccc;\nborder-radius: 15px;\n\nbackground-color: var(--white-color);\ntext-transform: capitalize;\n\nbox-shadow: 0 3px 8px rgb(0 0 0 / 15%);\n\n&:hover {\n  background-color: rgba(204, 204, 204, 0.8);\n  color: #fff;\n}\n`","\nimport { Button, BtnContainer } from \"./FeedbackOptions.styles\";\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const optionsKeys = Object.keys(options)\n  return (\n    <BtnContainer>\n      {optionsKeys.map(key =>\n        <Button\n          key={key}\n          onClick={() => onLeaveFeedback(key)}\n        >\n          {key}\n        </Button>\n      )}\n    </BtnContainer>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n}\n\nexport default FeedbackOptions;","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\ndisplay: grid;\ngrid-template-columns: repeat(5, 1fr);\nmargin: 0 auto;\nlist-style: none;\n`\n\nexport const Item = styled.li`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n\n&:not(:last-child) {\n  margin-right: 5px;\n}\n`\n\nexport const Text = styled.p``\n","import { List, Item, Text } from \"./Statistics.styles\";\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ total, positivePercentage, state }) => {\n  const stateKeys = Object.keys(state);\n\n  return (\n    <List>\n      {stateKeys.map(key => {\n        return (\n          <Item key={key + state[key]}>\n            <Text>{key}: {state[key]}</Text>\n          </Item>\n        );\n      })}\n\n      <Item>\n        <Text>Total: {total}</Text>\n      </Item>\n      <Item>\n        <Text>Positive feedback: {positivePercentage}%</Text>\n      </Item>\n    </List>\n  );\n};\n\nStatistics.propTypes = {\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n  state: PropTypes.object.isRequired,\n}\n\nexport default Statistics;\n\n\n\n","import styled from \"@emotion/styled\";\n\nexport const Message = styled.p``","import { Message } from './Notification.styles';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <Message>{message}</Message>\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n}\nexport default Notification;","import { useState } from 'react';\nimport { Container, FeedbackContainer } from './App.styles';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countTotalFeedback = () => good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = () =>\n    Math.round(good * 100 / countTotalFeedback());\n\n  const onLeaveFeedback = (key) => {\n    switch (key) {\n      case \"good\":\n        setGood(prevState => prevState + 1);\n        break;\n      case \"neutral\":\n        setNeutral(prevState => prevState + 1);\n        break;\n      case \"bad\":\n        setBad(prevState => prevState + 1);\n        break;\n      default: return;\n    };\n  };\n\n  return(\n    <Container>\n      <FeedbackContainer>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={{ good, neutral, bad }}\n            onLeaveFeedback={onLeaveFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {countTotalFeedback() ?\n            <Statistics\n              state={{ good, neutral, bad }}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            /> :\n            <Notification message=\"No feedback given\" />\n          }\n        </Section>\n      </FeedbackContainer>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}